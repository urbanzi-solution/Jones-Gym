
add plan form
> completed

/see-allplans page
> completed

trainer list in the add members form
> completed

plan list in the add members add members
> completed

add transaction type in add paln
> completed

staff profile
> completed

Filtering data in members
> completed

members active and inactive filtering
> completed

Filtering data in staff
> completed

add transaction type in renew plan
> completed

dynamic datas in in renew plan
> completed

client count for staff in the src\app\(pages)\staff\page.jsx and src\app\(pages)\staff-profile\page.jsx
> completed

set up plans table architecture
> completed

----------------------------------------------------------------------

add trainer name in the src\components\Plan_addform.jsx
import the trainers with checksum, select the trainers for the corresponding plan

create table called trainer_plan
CREATE TABLE trainers_plans (
    trainer_id VARCHAR(6),
    plan_name VARCHAR(30)
);

save the data of trainer_id and plan_name in the table

> completed
----------------------------------------------------------------------

create a route for fetching the transactions api/fetch_transactions/route.js

assign the transactions for the member using the urser_id in the backend
transactions in member profile

call the entire transactions from the fetch_transactios
transactions in report page

filter in transaction report

filter in individual transaction report

----------------------------------------------------------------------

staff filter partially pending
staff - add plan (related to filter)

fetched the entire plans, filter the active plansin the backend and display in the filter

shows only active plan in the filter list

----------------------------------------------------------------------

no filter in transaction report

----------------------------------------------------------------------

expiry data update in the member profile

expiry data update in the dashboard member list

expiry data update in the notification

staff attendance table architecture and calender view in the frontend

----------------------------------------------------------------------

expire data update in the member list and member profile

saving profile pic in add memmbers

saving profile pic in add staff

notification:-
checking data expire on the backend

morning wish depends on the time

----------------------------------------------------------------------

regular promting

.env.local and lib/db.js are all set for the connection with the neon db and also use import getclient for the process in the route file